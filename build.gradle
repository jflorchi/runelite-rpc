plugins {
	id 'java'
	id 'com.google.protobuf' version '0.8.18'
	id 'idea'
}

sourceSets {
	main {
		java {
			srcDirs 'generated-sources/main/grpc', 'generated-sources/main/java'
		}
	}
}

repositories {
	mavenLocal()
	maven {
		url = 'https://repo.runelite.net'
	}
	mavenCentral()
}

def runeLiteVersion = 'latest.release'
def grpcVersion = '1.15.1'
def protobufVersion = '3.5.1'
def protocVersion = protobufVersion

dependencies {

	implementation "io.grpc:grpc-protobuf:${grpcVersion}"
	implementation "io.grpc:grpc-stub:${grpcVersion}"
	implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"

	runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"
	compileOnly "org.apache.tomcat:annotations-api:6.0.53"

	testImplementation "io.grpc:grpc-testing:${grpcVersion}"

	compileOnly group: 'net.runelite', name:'client', version: runeLiteVersion

	compileOnly 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'

	testImplementation 'junit:junit:4.12'
	testImplementation group: 'net.runelite', name:'client', version: runeLiteVersion
	testImplementation group: 'net.runelite', name:'jshell', version: runeLiteVersion

}

protobuf {
	generatedFilesBaseDir = "generated-sources"
	protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
	plugins {
		grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
	}
	generateProtoTasks {
		all().each { task ->
			task.plugins { grpc{} }
		}
		ofSourceSet('main')
	}
}

group = 'io.paratek.rpc'
version = '1.0-SNAPSHOT'
sourceCompatibility = '1.8'

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}
